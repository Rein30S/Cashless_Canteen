/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Admin;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import javax.swing.JOptionPane;
import koneksi.koneksi;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;

/**
 *
 * @author handy
 */
public class Laporan extends javax.swing.JFrame {

    /**
     * Creates new form Laporan
     */
    Connection conn;
    Statement stm;
    ResultSet rs;
    boolean isPrinted = false;
    String bulan1, tahun1;
    public Laporan() {
        initComponents();
        koneksi DB = new koneksi();
        DB.config();
        conn = DB.conn;
        stm = DB.stm;
    }
    
    private String cekNull(String nilai){
        String ret;
        if(nilai != null){
            ret = nilai;
        }else{
            ret = "0";
        }
        return ret;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbBulan = new javax.swing.JComboBox<>();
        tfTahun = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        lbJmlPenjualan = new javax.swing.JLabel();
        lbJumlahTopUp = new javax.swing.JLabel();
        lbJmlPenarikan = new javax.swing.JLabel();
        lbTotalPenjualan = new javax.swing.JLabel();
        lbTotalTopUp = new javax.swing.JLabel();
        lbTotalPenarikan = new javax.swing.JLabel();
        lbTotalSaldo = new javax.swing.JLabel();
        lbPengguna = new javax.swing.JLabel();
        lbToko = new javax.swing.JLabel();
        BG = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 11, 40, 40));

        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 549, 40, 40));

        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(732, 497, 105, 34));

        cbBulan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember" }));
        cbBulan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBulanActionPerformed(evt);
            }
        });
        getContentPane().add(cbBulan, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 220, 100, 30));

        tfTahun.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        tfTahun.setBorder(null);
        tfTahun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTahunActionPerformed(evt);
            }
        });
        getContentPane().add(tfTahun, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 223, 73, -1));

        jLabel15.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(504, 497, 105, 34));

        jLabel16.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel16MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(618, 497, 105, 34));

        lbJmlPenjualan.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbJmlPenjualan.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbJmlPenjualan.setText("jLabel17");
        getContentPane().add(lbJmlPenjualan, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 280, 150, 20));

        lbJumlahTopUp.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbJumlahTopUp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbJumlahTopUp.setText("jLabel18");
        getContentPane().add(lbJumlahTopUp, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 320, 150, 20));

        lbJmlPenarikan.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbJmlPenarikan.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbJmlPenarikan.setText("jLabel19");
        getContentPane().add(lbJmlPenarikan, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 360, 150, 20));

        lbTotalPenjualan.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbTotalPenjualan.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTotalPenjualan.setText("jLabel20");
        getContentPane().add(lbTotalPenjualan, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 405, 150, 20));

        lbTotalTopUp.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbTotalTopUp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTotalTopUp.setText("jLabel21");
        getContentPane().add(lbTotalTopUp, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 445, 150, 20));

        lbTotalPenarikan.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbTotalPenarikan.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTotalPenarikan.setText("jLabel22");
        getContentPane().add(lbTotalPenarikan, new org.netbeans.lib.awtextra.AbsoluteConstraints(671, 280, 150, 20));

        lbTotalSaldo.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbTotalSaldo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTotalSaldo.setText("jLabel24");
        getContentPane().add(lbTotalSaldo, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 320, 150, 20));

        lbPengguna.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbPengguna.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbPengguna.setText("jLabel17");
        getContentPane().add(lbPengguna, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 360, 150, 20));

        lbToko.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbToko.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbToko.setText("jLabel19");
        getContentPane().add(lbToko, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 405, 150, 20));

        BG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Admin/Laporan.png"))); // NOI18N
        getContentPane().add(BG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 600));

        setSize(new java.awt.Dimension(900, 600));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tfTahunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTahunActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfTahunActionPerformed

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        Menu_Atur_Toko mat = new Menu_Atur_Toko();
        mat.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked
        // TODO add your handling code here:
        if(!"".equals(tfTahun.getText())){
            int tahun = Integer.parseInt(tfTahun.getText());
            String bulan = cbBulan.getSelectedItem().toString();
            bulan1 = bulan;
            tahun1 = String.valueOf(tahun);
            int month;
            switch (bulan) {
                case "Januari":
                    month = 1;
                    break;
                case "Februari":
                    month = 2;
                    break;
                case "Maret":
                    month = 3;
                    break;
                case "April":
                    month = 4;
                    break;
                case "Mei":
                    month = 5;
                    break;
                case "Juni":
                    month = 6;
                    break;
                case "Juli":
                    month = 7;
                    break;
                case "Agustus":
                    month = 8;
                    break;
                case "September":
                    month = 9;
                    break;
                case "Oktober":
                    month = 10;
                    break;
                case "November":
                    month = 11;
                    break;
                case "Desember":
                    month = 12;
                    break;
                default:
                    month = 0;
                    break;
            }
            try{
                if(month != 0){
                    rs = stm.executeQuery("SELECT COUNT(*) AS jumlah_penjualan FROM transaksi WHERE status != 'Pending' AND MONTH(waktu_transaksi) = '"+month+"' AND YEAR(waktu_transaksi) = '"+tahun+"' AND jenis_transaksi = 'Pembelian'");
                    rs.next();
                    lbJmlPenjualan.setText(rs.getString("jumlah_penjualan"));
                    rs = stm.executeQuery("SELECT COUNT(*) AS jumlah_topup FROM transaksi WHERE status != 'Pending' AND MONTH(waktu_transaksi) = '"+month+"' AND YEAR(waktu_transaksi) = '"+tahun+"' AND jenis_transaksi = 'Deposit'");
                    rs.next();
                    lbJumlahTopUp.setText(rs.getString("jumlah_topup"));
                    rs = stm.executeQuery("SELECT COUNT(*) AS jumlah_withdraw FROM transaksi WHERE status != 'Pending' AND MONTH(waktu_transaksi) = '"+month+"' AND YEAR(waktu_transaksi) = '"+tahun+"' AND jenis_transaksi = 'Withdraw'");
                    rs.next();
                    lbJmlPenarikan.setText(rs.getString("jumlah_withdraw"));
                    rs = stm.executeQuery("SELECT SUM(total_transaksi) AS total_jual FROM transaksi WHERE status != 'Pending' AND MONTH(waktu_transaksi) = '"+month+"' AND YEAR(waktu_transaksi) = '"+tahun+"' AND jenis_transaksi = 'Pembelian'");
                    rs.next();
                    lbTotalPenjualan.setText(cekNull(rs.getString("total_jual")));
                    rs = stm.executeQuery("SELECT SUM(total_transaksi) AS total_topup FROM transaksi WHERE status != 'Pending' AND MONTH(waktu_transaksi) = '"+month+"' AND YEAR(waktu_transaksi) = '"+tahun+"' AND jenis_transaksi = 'Deposit'");
                    rs.next();
                    lbTotalTopUp.setText(cekNull(rs.getString("total_topup")));
                    rs = stm.executeQuery("SELECT SUM(total_transaksi) AS total_withdraw FROM transaksi WHERE status != 'Pending' AND MONTH(waktu_transaksi) = '"+month+"' AND YEAR(waktu_transaksi) = '"+tahun+"' AND jenis_transaksi = 'Withdraw'");
                    rs.next();
                    lbTotalPenarikan.setText(cekNull(rs.getString("total_withdraw")));
                }else{
                    rs = stm.executeQuery("SELECT COUNT(*) AS jumlah_penjualan FROM transaksi WHERE status != 'Pending' AND YEAR(waktu_transaksi) = '"+tahun+"' AND jenis_transaksi = 'Pembelian'");
                    rs.next();
                    lbJmlPenjualan.setText(rs.getString("jumlah_penjualan"));
                    rs = stm.executeQuery("SELECT COUNT(*) AS jumlah_topup FROM transaksi WHERE status != 'Pending' AND YEAR(waktu_transaksi) = '"+tahun+"' AND jenis_transaksi = 'Deposit'");
                    rs.next();
                    lbJumlahTopUp.setText(rs.getString("jumlah_topup"));
                    rs = stm.executeQuery("SELECT COUNT(*) AS jumlah_withdraw FROM transaksi WHERE status != 'Pending' AND YEAR(waktu_transaksi) = '"+tahun+"' AND jenis_transaksi = 'Withdraw'");
                    rs.next();
                    lbJmlPenarikan.setText(rs.getString("jumlah_withdraw"));
                    rs = stm.executeQuery("SELECT SUM(total_transaksi) AS total_jual FROM transaksi WHERE status != 'Pending' AND YEAR(waktu_transaksi) = '"+tahun+"' AND jenis_transaksi = 'Pembelian'");
                    rs.next();
                    lbTotalPenjualan.setText(cekNull(rs.getString("total_jual")));
                    rs = stm.executeQuery("SELECT SUM(total_transaksi) AS total_topup FROM transaksi WHERE status != 'Pending' AND YEAR(waktu_transaksi) = '"+tahun+"' AND jenis_transaksi = 'Deposit'");
                    rs.next();
                    lbTotalTopUp.setText(cekNull(rs.getString("total_topup")));
                    rs = stm.executeQuery("SELECT SUM(total_transaksi) AS total_withdraw FROM transaksi WHERE status != 'Pending' AND YEAR(waktu_transaksi) = '"+tahun+"' AND jenis_transaksi = 'Withdraw'");
                    rs.next();
                    lbTotalPenarikan.setText(cekNull(rs.getString("total_withdraw")));
                }
                
                rs = stm.executeQuery("SELECT SUM(saldo) AS total_saldo FROM user WHERE isdelete = 0");
                rs.next();
                lbTotalSaldo.setText(rs.getString("total_saldo"));
                rs = stm.executeQuery("SELECT COUNT(*) AS total_user FROM user INNER JOIN pelanggan ON user.id_user = pelanggan.id_user WHERE user.isdelete = 0");
                rs.next();
                lbPengguna.setText(rs.getString("total_user"));
                rs = stm.executeQuery("SELECT COUNT(*) AS total_toko FROM user INNER JOIN toko ON user.id_user = toko.id_user WHERE user.isdelete = 0");
                rs.next();
                lbToko.setText(rs.getString("total_toko"));
                isPrinted = true;
            }catch(SQLException e){
                JOptionPane.showMessageDialog(null, e);
            }
            
        }else{
            JOptionPane.showMessageDialog(null, "Semua kolom harus diisi terlebih dahulu");
        }
        
    }//GEN-LAST:event_jLabel15MouseClicked

    private void jLabel16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel16MouseClicked
        // TODO add your handling code here:
        lbJmlPenjualan.setText("");
        lbJumlahTopUp.setText("");
        lbJmlPenarikan.setText("");
        lbTotalPenjualan.setText("");
        lbTotalTopUp.setText("");
        lbTotalPenarikan.setText("");
        lbTotalSaldo.setText("");
        lbPengguna.setText("");
        lbToko.setText("");
        bulan1 = null;
        tahun1 = null;
        isPrinted = false;
    }//GEN-LAST:event_jLabel16MouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        // TODO add your handling code here:
        if(isPrinted){
            try{
                // Report PDF
                String jrxmlFile = "src/Report/laporan.jrxml";
                HashMap param = new HashMap();
                param.put("JUMLAH_PENJUALAN", lbJmlPenjualan.getText());
                param.put("JUMLAH_TOPUP", lbJumlahTopUp.getText());
                param.put("JUMLAH_PENARIKAN", lbJmlPenarikan.getText());
                param.put("TOTAL_PENJUALAN", lbTotalPenjualan.getText());
                param.put("TOTAL_TOPUP", lbTotalTopUp.getText());
                param.put("TOTAL_PENARIKAN", lbTotalPenarikan.getText());
                param.put("TOTAL_SALDO", lbTotalSaldo.getText());
                param.put("JUMLAH_PENGGUNA", lbPengguna.getText());
                param.put("JUMLAH_TOKO", lbToko.getText());
                param.put("USERNAME_ADMIN", admin_login.getUsername());
                param.put("BULAN", bulan1);
                param.put("TAHUN", tahun1);
                JasperReport jspR = JasperCompileManager.compileReport(jrxmlFile);
                JasperPrint JPrint = JasperFillManager.fillReport(jspR, param, conn);
                String dest = "src/Report/laporan.pdf";
                JasperExportManager.exportReportToPdfFile(JPrint, dest);
                // End Report PDF
                JOptionPane.showMessageDialog(null, "File berhasil di-generate");
            }catch(JRException e){
                JOptionPane.showMessageDialog(null, e);
            }
                
        }else{
            JOptionPane.showMessageDialog(null, "Anda harus menampilkan data terlebih dahulu!");
        }
    }//GEN-LAST:event_jLabel4MouseClicked

    private void cbBulanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBulanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbBulanActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Laporan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Laporan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Laporan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Laporan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Laporan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BG;
    private javax.swing.JComboBox<String> cbBulan;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lbJmlPenarikan;
    private javax.swing.JLabel lbJmlPenjualan;
    private javax.swing.JLabel lbJumlahTopUp;
    private javax.swing.JLabel lbPengguna;
    private javax.swing.JLabel lbToko;
    private javax.swing.JLabel lbTotalPenarikan;
    private javax.swing.JLabel lbTotalPenjualan;
    private javax.swing.JLabel lbTotalSaldo;
    private javax.swing.JLabel lbTotalTopUp;
    private javax.swing.JTextField tfTahun;
    // End of variables declaration//GEN-END:variables
}
